(()=>{"use strict";function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function e(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var n=function(){var n,r;function o(t,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),e(this,"_title",void 0),e(this,"_description",void 0),e(this,"_duedate",void 0),e(this,"_priority",void 0),e(this,"_notes",void 0),e(this,"_checklist",void 0),e(this,"_id",void 0),this._id=o.id,o.id++,this._title=t,this._description=n,this._priority=r}return n=o,(r=[{key:"title",get:function(){return this._title},set:function(t){this._title=t}},{key:"description",get:function(){return this._description},set:function(t){this._description=t}},{key:"duedate",get:function(){return this._duedate},set:function(t){this._duedate=t}},{key:"priority",get:function(){return this._priority},set:function(t){this._priority=t}},{key:"notes",get:function(){return this._notes},set:function(t){this._notes=t}},{key:"checklist",get:function(){return this._checklist},set:function(t){this._checklist=t}},{key:"id",get:function(){return this._id}}])&&t(n.prototype,r),o}();function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function o(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),t}function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}e(n,"id",1);var i=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),a(this,"_todoList",[]),a(this,"_id",void 0),a(this,"_name",void 0),a(this,"addTodo",(function(t){n._todoList.push(t)})),this._id=t.id,t.id++,this._name=e}return o(t,[{key:"todoList",get:function(){return this._todoList}},{key:"id",get:function(){return this._id}},{key:"name",get:function(){return this._name},set:function(t){this._name=t}}]),o(t,[{key:"deleteTodo",value:function(t){for(var e=[],n=0;n<this._todoList.length;n++)!this._todoList[n].id===t&&e.push(this._todoList[n]);this._todoList=[].concat(e)}}]),t}();function c(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function d(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}a(i,"id",1);var s=function(){function t(){var e=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),d(this,"_projectList",[]),d(this,"addProject",(function(t){e._projectList.push(t)})),d(this,"updateProjectName",(function(t,n){e._projectList.forEach((function(e){e.id===n&&(e.name=t)}))})),d(this,"removeProject",(function(t){e._projectList=e._projectList.filter((function(e){return e.id!==t}))}))}var e,n;return e=t,(n=[{key:"getProject",value:function(t){return this._projectList.find((function(e){return e.id===t}))}},{key:"projectList",get:function(){return this._projectList}}])&&c(e.prototype,n),t}(),l=function(){var t=document.getElementById("project-wrapper"),e=document.getElementById("project-form"),n=document.getElementById("project-name"),r=(document.getElementById("get-project-name"),document.getElementById("sidenav"));function o(e){var n=t.querySelectorAll("li");return Array.from(n).find((function(t){return t.id==="project-".concat(e)}))}return{createProjectUI:function(e,n){var o=document.createElement("li");o.id="project-".concat(n);var a=document.createElement("div");a.id="project-row",a.classList.add("project-row"),r.classList.contains("show-sidenav")||a.classList.add("project-row-whitespace");var i=document.createElement("div");i.classList.add("project-header");var c=document.createElement("img");c.classList.add("toggle-task-btn"),c.src="./images/icons8-expand-arrow-16.png";var d=document.createElement("button");d.classList.add("project-name"),d.dataset.id="projectName-".concat(n),d.textContent=e;var s=document.createElement("button");s.textContent="-",s.classList.add("remove-project"),s.dataset.id="remove-project",i.appendChild(c),i.appendChild(d),i.appendChild(s);var l=document.createElement("div");l.dataset.id="task-wrapper",l.classList.add("task-wrapper"),l.classList.add("task-wrapper-off"),a.appendChild(i),a.appendChild(l),o.appendChild(a),t.appendChild(o)},addProjectForm:e,inputElement:n,closeProjectInputName:function(){e.reset(),document.getElementById("get-project-name").classList.toggle("get-project-name-off")},removeProject:function(e){t.querySelectorAll("li").forEach((function(t){t.id==="project-".concat(e)&&t.remove()}))},projectWrapper:t,getProject:o,removeProjectFromTaskForm:function(t){document.getElementById("project-".concat(t)).remove()},addProjectToTaskForm:function(t,e){var n=document.getElementById("todo-form-projects"),r=document.createElement("option");r.value=t,r.id="project-".concat(t),r.textContent=e,n.appendChild(r)},getTaskWrapper:function(t){return o(t).querySelector('div[data-id="task-wrapper"]')}}}();function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var p=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n;return e=t,n=[{key:"HIGH",get:function(){return{color:"#e53935",value:0,text:"high"}}},{key:"MEDIUM",get:function(){return{color:"#FFB300",value:1,text:"medium"}}},{key:"LOW",get:function(){return{color:"#43A047",value:2,text:"low"}}}],null&&u(e.prototype,null),n&&u(e,n),t}();function m(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var f,v,h,y,g,j,b,k,E,L=(v=document.getElementsByClassName("content")[0],h=document.getElementById("todo-form"),y=document.getElementById("submit-todo"),g=document.getElementsByName("priority"),j=document.getElementById("todo-title"),b=document.getElementById("todo-description"),k=document.getElementById("todo-form-projects"),m(f={createTaskNavBar:function(t,e,n){var r=document.createElement("div");r.classList.add("task"),r.id="navTask-".concat(t);var o=document.createElement("div");switch(o.classList.add("priority-icon"),n){case p.LOW.text:o.style.backgroundColor=p.LOW.color;break;case p.MEDIUM.text:o.style.backgroundColor=p.MEDIUM.color;break;case p.HIGH.text:o.style.backgroundColor=p.HIGH.color}var a=document.createElement("div");return a.classList.add("task-name"),a.textContent=e,r.appendChild(o),r.appendChild(a),r},createTask:E=function(t,e,n,r,o){var a=document.createElement("div");a.classList.add("card"),a.id="card-".concat(t),a.dataset.project=e;var i=document.createElement("div");switch(i.classList.add("card-header"),o){case p.LOW.text:i.style.backgroundColor=p.LOW.color;break;case p.MEDIUM.text:i.style.backgroundColor=p.MEDIUM.color;break;case p.HIGH.text:i.style.backgroundColor=p.HIGH.color}var c=document.createElement("h4");c.textContent=n;var d=document.createElement("button");d.classList.add("button2"),d.textContent="-",i.appendChild(c),i.appendChild(d);var s=document.createElement("textarea");s.classList.add("card-body"),s.value=r,a.appendChild(i),a.appendChild(s),v.appendChild(a)},formPriorityElements:g,addTodoForm:h,todoSubmitBtn:y,formDescriptionElement:b,formTitleElement:j,formProjectElement:k,closeTaskInputForm:function(){h.reset(),document.getElementById("add-todo-modal").classList.toggle("add-todo-modal-off")}},"createTask",E),m(f,"getTasksByProjectId",(function(t){return document.querySelectorAll('div[data-project="'.concat(t,'"]'))})),m(f,"content",v),m(f,"getNavTaskById",(function(t){return document.getElementById("navTask-".concat(t))})),f);function I(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var _=new s;!function(){var t,e=0;function r(){var t,n=L.content.querySelectorAll(".card");n=function(t){if(Array.isArray(t))return I(t)}(t=Array.from(n).map((function(t){return parseInt(t.dataset.project)!==e?t.classList.add("card-off"):t.classList.remove("card-off")})))||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(t){if("string"==typeof t)return I(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(t,e):void 0}}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}(t=new i("default"))._id=0,_.addProject(t),l.createProjectUI(t.name,t.id),document.getElementById("project-0").querySelector(".project-row").classList.remove("project-row-whitespace"),r(),l.addProjectForm.addEventListener("submit",(function(t){t.preventDefault();var e=l.inputElement.value,n=function(t){var e=new i(t);return _.addProject(e),l.createProjectUI(e.name,e.id),e.id}(e);l.closeProjectInputName(),l.addProjectToTaskForm(n,e)})),l.projectWrapper.addEventListener("click",(function(t){if("remove-project"===t.target.dataset.id){var e=t.target.parentNode.parentNode.parentNode.id.split("-")[1];!function(t){0!==t&&(console.log(_.projectList),_.removeProject(t),l.removeProject(t),l.removeProjectFromTaskForm(t),L.getTasksByProjectId(t).forEach((function(t){t.remove()})),console.log(_.projectList))}(parseInt(e))}})),l.projectWrapper.addEventListener("click",(function(t){if(t.target.classList.contains("project-name")){var n=t.target;e=parseInt(n.dataset.id.split("-")[1]),r()}})),L.content.addEventListener("click",(function(t){if(t.target.classList.contains("button2")){var e=t.target.parentNode.parentNode,n=e.id,r=parseInt(e.dataset.project),o=parseInt(n.split("-")[1]);e.remove(),L.getNavTaskById(o).remove();var a=_.getProject(r);console.log(a._todoList),a.deleteTodo(o),console.log(a._todoList)}})),L.content.addEventListener("change",(function(t){if(t.target.classList.contains("card-body")){var e=t.target,n=t.target.parentNode,r=n.id,o=parseInt(r.split("-")[1]),a=parseInt(n.dataset.project);_.getProject(a).todoList.find((function(t){return t.id===o})).description=e.value,console.log(_.getProject(a).todoList)}})),L.addTodoForm.addEventListener("submit",(function(t){var e,o;t.preventDefault(),function(t,e,o,a){var i=new n(e,o,a,t);console.table(_.projectList);for(var c=_.projectList,d=0;d<c.length;d++)if(c[d].id===t){c[d].addTodo(i);break}var s=L.createTaskNavBar(i.id,i.title,i.priority);l.getTaskWrapper(t).appendChild(s),L.createTask(i.id,t,i.title,i.description,i.priority),r()}((o=L.formProjectElement,parseInt(o.value)),L.formTitleElement.value,L.formDescriptionElement.value,(L.formPriorityElements.forEach((function(t){t.checked&&(e=t.value)})),e)),L.closeTaskInputForm()}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,